version: "2"
services:
  mongo:
    container_name: mongo
    build: ./mongo/.
    restart: "no"
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - network
  # check:
  #   container_name: check
  #   restart: always
  #   build: ./check_status_api/.
  #   ports:
  #     - "8100:3000"
  #   networks:
  #     - network
  mock1:
    container_name: mock1
    restart: always
    build: ./deviceMock/.
    environment:
      - mock_name=mock1
      - mock_port=8101
      - local_ip=192.168.1.50
    ports:
      - "8101:3000"
    networks:
      - network
  mock2:
    container_name: mock2
    restart: always
    build: ./deviceMock/.
    environment:
      - mock_name=mock2
      - mock_port=8102
      - local_ip=192.168.1.50
    ports:
      - "8102:3000"
    networks:
      - network
  mock3:
    container_name: mock3
    restart: always
    build: ./deviceMock/.
    environment:
      - mock_name=mock3
      - mock_port=8103
      - local_ip=192.168.1.50
    ports:
      - "8103:3000"
    networks:
      - network
  mock4:
    container_name: mock4
    restart: always
    build: ./deviceMock/.
    environment:
      - mock_name=mock4
      - mock_port=8104
      - local_ip=192.168.1.50
    ports:
      - "8104:3000"
    networks:
      - network
  app:
    container_name: cortijo
    restart: always
    build: ./api/.
    ports:
      - "8000:3000"
    links:
      - mongo
    networks:
      - network
  front:
    container_name: front
    restart: always
    build: ./frontAng/.
    ports:
      - "443:80"
    networks:
      - network
networks:
  network:
