version: "3.3"
services:
  haproxy:
    container_name: haproxy
    build: ./haproxy2/.
    restart: on-failure
    ports:
    - "80:80"
    - "443:443"
    - "9000:9000"
  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    ports:
    - "27017:27017"
    volumes:
    - /media/ubuntu/db1:/data/db
  cortijo:
    container_name: cortijo
    restart: on-failure
    build: ./cortijo/.
    environment:
    - TZ='Europe/London'
    - TELEGRAM_ID=${TELEGRAM_ID}
    - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    ports:
    - "11000:3000"
    networks:
    - network
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /home/ubuntu/cortijo/deployment/config_url.yaml:/root/node/config_url.yaml:ro
    - /home/ubuntu/cortijo/cortijo/config.yaml:/root/node/config.yaml
    depends_on:
    - mongo
    - auth
  ws:
    container_name: ws
    restart: on-failure
    build: ./ws/.
    ports:
    - "3000:3000"
    - "3001:3001"
    volumes:
    - /home/ubuntu/cortijo/deployment/config_url.yaml:/root/scr/config_url.yaml:ro
    depends_on:
    - mongo
    - cortijo
  auth:
    container_name: auth
    restart: always
    build: ./auth/.
    environment:
    - TOKEN=${AUTH_TOKEN}
    ports:
    - "12000:3000"
    networks:
    - network
    volumes:
    - /home/ubuntu/cortijo/deployment/config_url.yaml:/root/node/config_url.yaml:ro
    depends_on:
    - mongo
  socket:
    container_name: socket
    restart: always
    build: ./socket/.
    ports:
    - "13000:3000"
    networks:
    - network
    depends_on:
    - mongo
    - cortijo
  front:
    container_name: front
    restart: always
    build: ./frontAng/.
    ports:
    - "10000:80"
  git:
    container_name: git
    restart: on-failure
    build: ./git/.
    environment:
    - PASSWORD=${GIT_PASSWORD}
  setip:
    container_name: setip
    restart: on-failure
    build: ./router53/.
    environment:
    - ROUTE53_URL=${ROUTE53_URL}
    - ROUTE53_KEY=${ROUTE53_KEY}
  camera:
    container_name: camera
    restart: on-failure
    build: ./camera/.
    ports:
    - "14000:3000"
    volumes:
    - type: bind
      source: /media/ubuntu/ExtDriver/eramos
      target: /root/node/eramos
  file:
    container_name: file
    restart: on-failure
    build: ./file/.
    ports:
    - "15000:3000"
    volumes:
    - type: bind
      source: /media/ubuntu/ExtDriver/eramosFiles
      target: /scr/files/
  # device:
  #   container_name: deviceMock
  #   restart: always
  #   build: ../mock/deviceMock/.
  #   environment:
  #   - mock_name=deviceMock
  #   - mock_port=8101
  #   - local_ip=192.168.1.53
  #   ports:
  #   - "8101:3000"
  #   networks:
  #   - network
  #   depends_on:
  #   - cortijo
  # sensortemperature:
  #   container_name: sensorTemperatureMock
  #   restart: always
  #   build: ../mock/sensorMock/.
  #   environment:
  #   - mock_name=sensorTemperatureMock
  #   - mock_port=8105
  #   - local_ip=192.168.1.53
  #   ports:
  #   - "8105:3000"
  #   networks:
  #   - network
  #   depends_on:
  #   - cortijo
  # sensorhumidity:
  #   container_name: sensorHumidityMock
  #   restart: always
  #   build: ../mock/sensorHumidityMock/.
  #   environment:
  #   - mock_name=sensorHumidityMock
  #   - mock_port=8106
  #   - local_ip=192.168.1.53
  #   ports:
  #   - "8106:3000"
  #   networks:
  #   - network
  #   depends_on:
  #   - cortijo
  # feigenbaum:
  #   container_name: feigenbaumMock
  #   restart: on-failure
  #   build: ../mock/feigenbaum/.
  #   environment:
  #   - mock_name=feigenbaumMock
  #   - mock_port=8107
  #   - local_ip=192.168.1.50
  #   ports:
  #   - "8107:3000"
  #   networks:
  #   - network
  #   depends_on:
  #   - cortijo
  # mock2:
  #  container_name: mock2
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock2
  #    - mock_port=8102
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8102:3000"
  #  networks:
  #    - network
  # mock3:
  #  container_name: mock3
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock3
  #    - mock_port=8103
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8103:3000"
  #  networks:
  #    - network
  # mock4:
  #  container_name: mock4
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock4
  #    - mock_port=8104
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8104:3000"
  #  networks:
  #    - network
networks:
  network:
