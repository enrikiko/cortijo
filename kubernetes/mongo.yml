apiVersion: v1
kind: PersistentVolume
metadata:
  name: cortijo-pv-volume
  namespace: cortijo
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/pi/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cortijo-pv-claim
  namespace: cortijo
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-a
  namespace: cortijo
  labels:
    name: mongo-svc-a
spec:
  type: LoadBalancer
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-a
  selector:
    name: mongo-node1
    instance: rod
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongo-rc1
  namespace: cortijo
  labels:
    name: mongo-rc
spec:
  replicas: 1
  selector:
    name: mongo-node1
  template:
    metadata:
      labels:
        name: mongo-node1
        instance: rod
    spec:
      containers:
      - name: mongo-node1
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage1
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage1
        persistentVolumeClaim:
          claimName: cortijo-pv-claim
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mongo
  namespace: cortijo
spec:
  rules:
  - host: mongo.192.168.1.61.nip.io
    http:
      paths:
      - backend:
          serviceName: mongo-svc-a
          servicePort: 27017
        path: /
  tls:
  - hosts:
    - mongo.192.168.1.61.nip.io
