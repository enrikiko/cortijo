apiVersion: v1
kind: Service
metadata:
  name: auth-svc-a
  namespace: cortijo
  labels:
    name: auth-svc-a
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: auth-svc-a
  selector:
    name: auth-node1
    instance: rod
# ---
# apiVersion: v1
# kind: ReplicationController
# metadata:
#   name: auth-rc1
#   namespace: cortijo
#   labels:
#     name: auth-rc
# spec:
#   replicas: 1
#   selector:
#     name: auth-node1
#   template:
#     metadata:
#       labels:
#         name: auth-node1
#         instance: rod
#     spec:
#       containers:
#       - name: auth-node1
#         image: enriqueramosmunoz/auth:dev
#         ports:
#         - containerPort: 3000
#         imagePullPolicy: Always
---
apiVersion: apps/v1 # Usa apps/v1beta2 para versiones anteriores a 1.9.0
kind: Deployment
metadata:
  name: auth-deployment
  namespace: cortijo
  labels:
    name: auth-rc
spec:
  selector:
    matchLabels:
      app: auth
  replicas: 1 # indica al controlador que ejecute 2 pods
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth-node1
        image: enriqueramosmunoz/auth:aarch64
        command: ["ls"]
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: auth
  namespace: cortijo
spec:
  rules:
  - host: auth.192.168.1.61.nip.io
    http:
      paths:
      - backend:
          serviceName: auth-deployment
          servicePort: http
        path: /
  tls:
  - hosts:
    - auth.192.168.1.61.nip.io
