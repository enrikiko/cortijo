apiVersion: v1
kind: Service
metadata:
  name: orchestrator-svc-a
  namespace: cortijo
  labels:
    name: orchestrator-svc-a
spec:
  type: LoadBalancer
  ports:
  - port: 4000
    targetPort: 3000
    protocol: TCP
    name: orchestrator-svc-a
  selector:
    app: orchestrator-deployment
---
apiVersion: apps/v1 # Usa apps/v1beta2 para versiones anteriores a 1.9.0
kind: Deployment
metadata:
  name: orchestrator-deployment
  namespace: cortijo
  labels:
    name: orchestrator-rc
spec:
  selector:
    matchLabels:
      app: orchestrator-deployment
  replicas: 1 # indica al controlador que ejecute 2 pods
  template:
    metadata:
      labels:
        app: orchestrator-deployment
    spec:
      containers:
      - name: orchestrator
        image: enriqueramosmunoz/cortijo:rasp
        command: ["node", "server.js"]
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config
          mountPath: /root/node/config_url.yaml
          subPath: config.yaml
        imagePullPolicy: Always
        # livenessProbe:
        #   httpGet:
        #     path: /info
        #     port: 4000
        #   initialDelaySeconds: 3
        #   periodSeconds: 3
      volumes:
      - name: config
        configMap:
          name: url-config
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: orchestrator
  namespace: cortijo
spec:
  rules:
  - host: back.app.cortijodemazas.com
    http:
      paths:
      - backend:
          serviceName: orchestrator-svc-a
          servicePort: 4000
        path: /
  # tls:
  # - hosts:
  #   - back.app.cortijodemazas.com
  #   secretName: cortijo-tls
