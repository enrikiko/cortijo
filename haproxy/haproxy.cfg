global
  daemon

defaults
  log	global
  mode	http
  option	httplog
  option	dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

listen stats # Define a listen section called "stats"
  bind :9000 # Listen on localhost:9000
  mode http
  stats enable  # Enable stats page
  stats hide-version  # Hide HAProxy version
  stats realm Haproxy\ Statistics  # Title text for popup window
  stats uri /haproxy_stats  # Stats URI
  stats auth UsernameTest2:PasswordSuperSecure  # Authentication credentials

frontend Cortijo_Server
  bind :80
  bind :443 ssl crt /etc/letsencrypt/haproxy.pem alpn h2,http/1.1

  option forwardfor

  timeout client 60s
  mode http

  #http-request redirect scheme https code 301 if !{ ssl_fc }


  acl VHOST_cortijo_app_back      req.hdr(Host) -i -m dom back.app.cortijodemazas.com
  acl VHOST_cortijo_socket        req.hdr(Host) -i -m dom socket.cortijodemazas.com
  acl VHOST_cortijo_ws            req.hdr(Host) -i -m dom ws.cortijodemazas.com
  acl VHOST_cortijo_app           req.hdr(Host) -i -m dom www.cortijodemazas.com
  #acl VHOST_cortijo_wordpress     req.hdr(Host) -i -m dom octopi.cortijodemazas.com
  #acl VHOST_cortijo_jenkins       req.hdr(Host) -i -m dom jenkins.cortijodemazas.com
  #acl VHOST_haproxy               req.hdr(Host) -i -m dom haproxy.cortijodemazas.com
  #acl VHOST_cortijo_count         req.hdr(Host) -i -m dom app.cortijodemazas.com
  #acl VHOST_cortijo_file          req.hdr(Host) -i -m dom file.cortijodemazas.com
  #acl VHOST_router                req.hdr(Host) -i -m dom router.cortijodemazas.com
  #acl VHOST_cortijo_camera        req.hdr(Host) -i -m dom camera.cortijodemazas.com

  use_backend cortijo_ws          if VHOST_cortijo_ws
  use_backend cortijo_app_back    if VHOST_cortijo_app_back
  use_backend cortijo_socket      if VHOST_cortijo_socket
  use_backend cortijo_front       if VHOST_cortijo_app
  #use_backend cortijo_count       if VHOST_cortijo_count
  #use_backend cortijo_wordpress   if VHOST_cortijo_wordpress
  #use_backend cortijo_jenkins     if VHOST_cortijo_jenkins
  #use_backend router              if VHOST_router
  #use_backend cortijo_haproxy     if VHOST_haproxy
  #use_backend cortijo_file        if VHOST_cortijo_file
  #use_backend cortijo_camera      if VHOST_cortijo_camera

backend cortijo_app_back
  # server back 192.168.1.53:11000 check
  server orchestrator orchestrator.192.168.1.61.nip.io:80 check

backend cortijo_socket
  # server camera 192.168.1.53:13000 check
  server socket socket.192.168.1.61.nip.io:80 check

#backend cortijo_file
#  server file 192.168.1.53:15000 check

#backend router
#  server router 192.168.1.1:80 check

backend cortijo_ws
  server ws 192.168.1.53:16000 check

backend cortijo_haproxy
  server haproxy 192.168.1.53:9000 check

#backend cortijo_camera
#  server camera 192.168.1.53:14000 check

backend cortijo_front
  #server front1 192.168.1.53:8000 check
  #server front2 192.168.1.53:10000 check
  server front3 192.168.1.53:10001 check

#backend cortijo_wordpress
#  server front1 192.168.1.53:8000 check

#backend cortijo_count
#  server server1 192.168.1.53:3000 check
#  server server2 192.168.1.53:3001 check

#backend cortijo_jenkins
#server haproxy 192.168.1.61:30000 check
