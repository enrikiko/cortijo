version: "3.3"
services:
  mongo:
    container_name: mongo
    restart: on-failure
    build: ../mongo/.
    ports:
    - "27017:27017"
    networks:
    - network
  cortijo:
    container_name: cortijo
    restart: on-failure
    build: ../cortijo/.
    ports:
    - "8000:3000"
    networks:
    - network
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /root/cortijo/deployment/config_url.yaml:/root/node/config_url.yaml:ro
    - /root/cortijo/cortijo/config.yaml:/root/node/config.yaml
    depends_on:
    - mongo
    - auth
    - websocket
  auth:
    container_name: auth
    restart: always
    build: ../auth/.
    environment:
    - token_password=cortijo1
    ports:
    - "8010:3000"
    networks:
    - network
    volumes:
    - /root/cortijo/deployment/config_url.yaml:/root/node/config_url.yaml:ro
    depends_on:
    - mongo
  websocket:
    container_name: websocket
    restart: always
    build: ../webSocket/.
    ports:
    - "8200:3000"
    networks:
    - network
  mock:
    container_name: mock
    restart: always
    build: ../deviceMock/.
    environment:
    - mock_name=mock
    - mock_port=8101
    - local_ip=192.168.1.50
    ports:
    - "8101:3000"
    networks:
    - network
    depends_on:
    - cortijo
  sensortemperature:
    container_name: mockSensorTemperature
    restart: always
    build: ../sensorMock/.
    environment:
    - mock_name=mockSensorTemperature
    - mock_port=8105
    - local_ip=192.168.1.50
    ports:
    - "8105:3000"
    networks:
    - network
    depends_on:
    - cortijo
  sensorhumidity:
    container_name: mockSensorHumidity
    restart: always
    build: ../sensorHumidityMock/.
    environment:
    - mock_name=mockSensorHumidity
    - mock_port=8106
    - local_ip=192.168.1.50
    ports:
    - "8106:3000"
    networks:
    - network
    depends_on:
    - cortijo
  feigenbaum:
    container_name: feigenbaum
    restart: on-failure
    build: ../feigenbaum/.
    environment:
    - mock_name=feigenbaum
    - mock_port=8107
    - local_ip=192.168.1.50
    ports:
    - "8107:3000"
    networks:
    - network
    depends_on:
    - cortijo
  front:
    container_name: front
    restart: always
    build: ../frontAngTest/.
    ports:
    - "8300:4200"
  git:
    container_name: git
    restart: on-failure
    build: ../git/.
  ip:
    container_name: ip
    restart: on-failure
    build: ../ip/.
  camera:
    container_name: camera
    restart: on-failure
    build: ../camera/.
    ports:
    - "8400:3000"
    volumes:
    - type: bind
      source: /media/lenovo/ExtDriver/eramos
      target: /root/node/eramos
  file:
    container_name: file
    restart: on-failure
    build: ../fileApi/.
    ports:
    - "8500:3000"
    volumes:
    - type: bind
      source: /media/lenovo/ExtDriver/eramosFiles
      target: /scr/files/
  ftp:
    container_name: ftp
    restart: on-failure
    build: ../ftp/.
    ports:
    - "2121:21"
    volumes:
    - type: bind
      source: /media/lenovo/ExtDriver/eramos
      target: /data
  # mock2:
  #  container_name: mock2
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock2
  #    - mock_port=8102
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8102:3000"
  #  networks:
  #    - network
  # mock3:
  #  container_name: mock3
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock3
  #    - mock_port=8103
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8103:3000"
  #  networks:
  #    - network
  # mock4:
  #  container_name: mock4
  #  restart: always
  #  build: ../deviceMock/.
  #  environment:
  #    - mock_name=mock4
  #    - mock_port=8104
  #    - local_ip=192.168.1.50
  #  ports:
  #    - "8104:3000"
  #  networks:
  #    - network
networks:
  network:
